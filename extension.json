{
	"name": "MirahezeMagic",
	"author": [
		"Agent Isai",
		"John Lewis",
		"Labster",
		"MacFan4000",
		"Reception123",
		"Revi",
		"Paladox",
		"Southparkfan",
		"Universal Omega"
	],
	"url": "https://github.com/miraheze/MirahezeMagic",
	"descriptionmsg": "mirahezemagic-description",
	"namemsg": "mirahezemagic-extensionname",
	"license-name": "GPL-3.0-or-later",
	"type": "other",
	"requires": {
		"MediaWiki": ">= 1.43.0",
		"platform": {
			"php": ">= 8.1"
		}
	},
	"MessagesDirs": {
		"MirahezeMagic": [
			"i18n/overrides",
			"i18n/miraheze",
			"i18n/mirahezeprojectnames"
		]
	},
	"ExtensionMessagesFiles": {
		"MirahezeMagicAliases": "MirahezeMagicAliases.php"
	},
	"AutoloadNamespaces": {
		"Miraheze\\MirahezeMagic\\": "includes/",
		"Miraheze\\MirahezeMagic\\Maintenance\\": "maintenance/"
	},
	"LogActionsHandlers": {
		"vanishuser/*": "LogFormatter"
	},
	"LogHeaders": {
		"vanishuser": "vanishuser-log-header"
	},
	"LogNames": {
		"vanishuser": "vanishuser-log-name"
	},
	"LogTypes": [
		"vanishuser"
	],
	"SpecialPages": {
		"VanishUser": {
			"class": "Miraheze\\MirahezeMagic\\Specials\\SpecialVanishUser",
			"services" : [
				"JobQueueGroupFactory",
				"UserFactory"
			],
			"optional_services": [
				"CentralAuth.CentralAuthAntiSpoofManager",
				"CentralAuth.CentralAuthDatabaseManager",
				"CentralAuth.GlobalRenameUserValidator"
			]
		}
	},
	"Hooks": {
		"AbuseFilterShouldFilterAction": {
			"handler": "AbuseFilter"
		},
		"APIQuerySiteInfoGeneralInfo": {
			"handler": "Main"
		},
		"BlockIpComplete": {
			"handler": "Main"
		},
		"ContributionsToolLinks": {
			"handler": "Main"
		},
		"CreateWikiDeletion": {
			"handler": "CreateWiki"
		},
		"CreateWikiRename": {
			"handler": "CreateWiki"
		},
		"CreateWikiStatePrivate": {
			"handler": "CreateWiki"
		},
		"CreateWikiTables": {
			"handler": "CreateWiki"
		},
		"GetLocalURL::Internal": {
			"handler": "Main"
		},
		"GlobalUserPageWikis": {
			"handler": "GlobalUserPage"
		},
		"ImportDumpJobAfterImport": {
			"handler": "ImportDump"
		},
		"ImportDumpJobGetFile": {
			"handler": "ImportDump"
		},
		"MessageCacheFetchOverrides": {
			"handler": "Main"
		},
		"MimeMagicInit": {
			"handler": "Main"
		},
		"RecentChange_save": {
			"handler": "Main"
		},
		"RequestWikiFormDescriptorModify": {
			"handler": "RequestWiki"
		},
		"RequestWikiQueueFormDescriptorModify": {
			"handler": "RequestWiki"
		},
		"SiteNoticeAfter": {
			"handler": "Main"
		},
		"SkinAddFooterLinks": {
			"handler": "Main"
		},
		"TitleReadWhitelist": {
			"handler": "Main"
		},
		"UserGetRightsRemove": {
			"handler": "Main"
		}
	},
	"HookHandlers": {
		"AbuseFilter": {
			"class": "Miraheze\\MirahezeMagic\\HookHandlers\\AbuseFilter"
		},
		"CreateWiki": {
			"class": "Miraheze\\MirahezeMagic\\HookHandlers\\CreateWiki",
			"factory": "Miraheze\\MirahezeMagic\\HookHandlers\\CreateWiki::factory",
			"services": [
				"MainConfig",
				"ConnectionProvider",
				"FormatterFactory",
				"ManageWikiModuleFactory",
				"RepoGroup"
			]
		},
		"GlobalUserPage": {
			"class": "Miraheze\\MirahezeMagic\\HookHandlers\\GlobalUserPage",
			"services": [
				"CreateWikiDataStore",
				"ManageWikiDataStoreFactory"
			]
		},
		"ImportDump": {
			"class": "Miraheze\\MirahezeMagic\\HookHandlers\\ImportDump",
			"services": [
				"ConnectionProvider"
			]
		},
		"Main": {
			"class": "Miraheze\\MirahezeMagic\\HookHandlers\\Main",
			"factory": "Miraheze\\MirahezeMagic\\HookHandlers\\Main::factory",
			"services": [
				"MainConfig",
				"CommentStore",
				"HttpRequestFactory",
				"LinkRenderer",
				"TitleFactory"
			]
		},
		"RequestWiki": {
			"class": "Miraheze\\MirahezeMagic\\HookHandlers\\RequestWiki"
		}
	},
	"config": {
		"MirahezeMagicAccessIdsMap": {
			"description": "Array, in the format of wiki => [ central ids ]. Users authorized to access certain wikis to prevent global read rights from applying.",
			"value": []
		},
		"MirahezeMagicMemcachedServers": {
			"description": "Array. Memcached servers to use for clearing memcached keys when a wiki is deleted or renamed.",
			"value": []
		},
		"MirahezeReportsBlockAlertKeywords": {
			"description": "Array. Words in block reasons which trigger a report being sent to TSPortal.",
			"value": []
		},
		"MirahezeReportsWriteKey": {
			"description": "String. TSPortal write key to be used when connecting to it.",
			"value": ""
		}
	},
	"ConfigRegistry": {
		"MirahezeMagic": "MediaWiki\\Config\\GlobalVarConfig::newInstance"
	},
	"manifest_version": 2
}
